# Generated by Django 5.0.3 on 2024-10-21 17:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_type', models.CharField(choices=[('TYPE_OF_DISH', 'Type of Dish'), ('PREPARATION_METHOD', 'Preparation Method'), ('INGREDIENT_TYPE', 'Ingredient Type'), ('PREPARATION_TIME', 'Preparation Time'), ('DIFFICULTY_LEVEL', 'Difficulty Level')], max_length=50, verbose_name='Category Type')),
                ('sub_category', models.CharField(choices=[('TYPE_OF_DISH', [('APPETIZERS', 'Appetizers'), ('SOUPS', 'Soups'), ('SALADS', 'Salads'), ('MAIN_DISHES', 'Main Dishes'), ('DESSERTS', 'Desserts'), ('SNACKS', 'Snacks'), ('DRINKS', 'Drinks'), ('BREAD', 'Bread')]), ('PREPARATION_METHOD', [('FRYING', 'Frying'), ('BOILING', 'Boiling'), ('GRILLING', 'Grilling'), ('BAKING', 'Baking'), ('STEAMING', 'Steaming'), ('SOUS-VIDE', 'Sous-vide'), ('RAW', 'Raw')]), ('INGREDIENT_TYPE', [('VEGETABLE_BASED', 'Vegetable-Based'), ('MEAT_BASED', 'Meat-Based'), ('FISH_BASED', 'Fish-Based'), ('FRUIT_BASED', 'Fruit-Based'), ('SEAFOOD', 'Seafood'), ('DAIRY_BASED', 'Dairy-Based'), ('PASTA_RICE_BASED', 'Pasta/Rice-Based')]), ('PREPARATION_TIME', [('QUICK', 'Quick (up to 30 minutes)'), ('MEDIUM', 'Medium (30-60 minutes)'), ('TIME_CONSUMING', 'Time-Consuming (over an hour)')]), ('DIFFICULTY_LEVEL', [('EASY', 'Easy'), ('INTERMEDIATE', 'Intermediate'), ('DIFFICULT', 'Difficult')])], max_length=50, verbose_name='Sub Category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'unique_together': {('category_type', 'sub_category')},
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name of recipe')),
                ('description', models.TextField(verbose_name='Description of recipe')),
                ('prep_time', models.IntegerField(verbose_name='Preparation time')),
                ('total_time', models.IntegerField(verbose_name='Total time')),
                ('servings', models.IntegerField(verbose_name='Servings')),
                ('ingredients', models.TextField(verbose_name='Ingredients')),
                ('tools', models.TextField(verbose_name='Tools needed')),
                ('preparation_steps', models.TextField(verbose_name='Preparation steps')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('categories', models.ManyToManyField(related_name='recipes', to='recipes.category')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_type', models.CharField(choices=[('CUISINE_TYPE', 'Cuisine Type'), ('OCCASION', 'Occasion'), ('SEASON', 'Season')], max_length=50, verbose_name='Tag Type')),
                ('tag_label', models.CharField(choices=[('CUISINE_TYPE', [('ITALIAN', 'Italian Cuisine'), ('POLISH', 'Polish Cuisine'), ('ASIAN', 'Asian Cuisine'), ('MEXICAN', 'Mexican Cuisine'), ('FRENCH', 'French Cuisine'), ('MEDITERRANEAN', 'Mediterranean Cuisine'), ('VEGETARIAN_VEGAN', 'Vegetarian/Vegan Cuisine'), ('SWEDISH', 'Swedish Cuisine')]), ('OCCASION', [('CHRISTMAS', 'Christmas'), ('EASTER', 'Easter'), ('VALENTINES_DAY', "Valentine's Day"), ('NEW_YEARS_EVE', "New Year's Eve"), ('HALLOWEEN', 'Halloween'), ('BIRTHDAYS', 'Birthdays'), ('PICNICS', 'Picnics')]), ('SEASON', [('SUMMER', 'Summer'), ('AUTUMN', 'Autumn'), ('WINTER', 'Winter'), ('SPRING', 'Spring')])], max_length=50, verbose_name='Tag label')),
            ],
            options={
                'unique_together': {('tag_type', 'tag_label')},
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(related_name='recipes', to='recipes.tag'),
        ),
    ]
